apiVersion: v1
kind: Service
metadata:
  name: iot-telemetry-service
  namespace: home-stack-iot
spec:
  # Service will act as load balancer - selector is matching underling instance(s). There can be one or more Deployment(s) with the same selector label
  selector:
    # XX-YYY
    app: iot-telemetry
  # Defining headless service
  #clusterIP: None
  ports:
    - protocol: TCP
      port: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-telemetry-deployment
  labels:
    # This should be same as Service spec:selector
    # XX-YYY
    app: iot-telemetry
  namespace: home-stack-iot
spec:
  # commenting the replicas as this will be controlled by HPA
  #replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: iot-telemetry
  template:
    metadata:
      labels:
        app: iot-telemetry
        network/db-access: "true"
    spec:
      nodeSelector:
        kubernetes.io/hostname: khbr
      containers:
        - name: iot-telemetry-container
          image: alokkusingh/iot-telemetry-service:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /home/telemetry/actuator/health/liveness
              port: 8081
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /home/telemetry/actuator/health/readiness
              port: 8081
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 30
            failureThreshold: 3
          ports:
            - containerPort: 8081
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: iot-telemetry-secret
              mountPath: "/etc/jks"
              readOnly: true
            - name: mosquitto-ca-secret
              mountPath: "/etc/ca"
              readOnly: true
          env:
            # In Spring Boot, any property can be overridden by an environment variable of the same name,
            # with the characters changed to upper case, and the dots changed to underscores
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: spring-profiles-active
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: db-url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: stmt-user-name
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: stmt-password
            - name: LOGGING_LEVEL_COM_ZAXXER_HIKARI_HIKARICONFIG
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: logging-level-com-zaxxer-hikari-HikariConfig
            - name: LOGGING_LEVEL_COM_ZAXXER_HIKARI
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: logging-level-com-zaxxer-hikari
            - name: LOGGING_LEVEL_COM_ALOK
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: logging-level-com-alok
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORFK
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: logging-level-org-springframework
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORFK_SECURITY
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: logging-level-org-springframework-security
            - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: spring-datasource-hikari-minimum-idle
            - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: spring-datasource-hikari-maximum-pool-size
            - name: KSPASSWORD
              valueFrom:
                configMapKeyRef:
                  name: iot-telemetry-config
                  key: kspassword
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Asia/Kolkata
            type: File
        - name: iot-telemetry-secret
          secret:
            secretName: iot-telemetry-secret
        - name: mosquitto-ca-secret
          secret:
            secretName: mosquitto-ca-secret